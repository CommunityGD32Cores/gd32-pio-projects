; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env]
platform = https://github.com/CommunityGD32Cores/platform-gd32.git
platform_packages = 
    framework-spl-gd32@https://github.com/CommunityGD32Cores/gd32-pio-spl-package.git
monitor_speed = 115200
; activate special GCC math optimization switches
build_flags = 
    -ffast-math
    -DMBED_MINIMAL_PRINTF=1
    -DMBED_CONF_PLATFORM_MINIMAL_PRINTF_ENABLE_FLOATING_POINT_ONLY_32_BITS=1
    -DMBED_CONF_PLATFORM_MINIMAL_PRINTF_SET_FLOATING_POINT_MAX_DECIMALS=6
    -DMBED_CONF_PLATFORM_MINIMAL_PRINTF_ENABLE_64_BIT=0
    -Wl,-Map=output.map
    ;-DMBED_CONF_PLATFORM_MINIMAL_PRINTF_ENABLE_FLOATING_POINT=1
board_build.use_lto = yes
; use hardfloat for devices where it's available. 
; generates faster code and uses less intermediary functions
board_build.cm33_hardfloat = yes
board_build.cm4_hardfloat = yes
; do not link as intermediate archives -- size optimizer works better 
lib_archive = no
; ignore the library that uses pre-built code
lib_ignore = CMSIS-DSP
; use the library that uses source files
lib_deps = CMSIS-DSP-src
; activate printing floats support
; this blows up firmware size...
;board_build.spl_printf_float = yes
; enable wrapping of printf so our minimal-printf library kicks in with smaller printf implementation :)
board_build.use_minimal_printf = yes 

; GD32E10X series 

[env:gd32e103vb_mbed]
board = gd32e103vb_mbed
framework = spl
; treat as GD32E103V_EVAL to get the same 8MHz crystal setting
; that the eval board uses. is equivalent.
build_flags = 
    -DGD32E103V_EVAL

[env:gd32e103v_eval]
board = gd32e103v_eval
framework = spl

[env:genericGD32E103CB]
board = genericGD32E103CB
framework = spl

[env:genericGD32E103C8]
board = genericGD32E103C8
framework = spl

; GD32E23x series

[env:genericGD32E230C8]
board = genericGD32E230C8
framework = spl

[env:genericGD32E231C8]
board = genericGD32E231C8
framework = spl

; GD32E50x series

[env:genericGD32E503RC]
board = genericGD32E503RC
framework = spl

[env:genericGD32E505RE]
board = genericGD32E505RE
framework = spl

[env:genericGD32E507RE]
board = genericGD32E507RE
framework = spl

[env:gd32e503c_start]
board = gd32e503c_start
framework = spl

; GD32F1x0 series

[env:genericGD32F130C8]
board = genericGD32F130C8
framework = spl

[env:genericGD32F130C6]
board = genericGD32F130C6
framework = spl

[env:genericGD32F150C8]
board = genericGD32F150C8
framework = spl

[env:genericGD32F170C8]
board = genericGD32F170C8
framework = spl

[env:genericGD32F190C8]
board = genericGD32F190C8
framework = spl

; GD32F10x series

[env:genericGD32F101C8]
board = genericGD32F101C8
framework = spl

[env:gd32103c_start]
board = gd32103c_start
framework = spl

[env:genericGD32F103RC]
board = genericGD32F103RC
framework = spl

[env:genericGD32F105V8]
board = genericGD32F105V8
framework = spl

[env:genericGD32F107RF]
board = genericGD32F107RF
framework = spl

; GD32F20x series

[env:genericGD32F205RE]
board = genericGD32F205RE
framework = spl

[env:genericGD32F207RC]
board = genericGD32F207RC
framework = spl

; GD32F30x series

[env:genericGD32F303CC]
board = genericGD32F303CC
framework = spl

[env:gd32307c_eval]
board = gd32307c_eval
framework = spl

[env:gd32f303ze_eval]
board = gd32f303ze_eval
framework = spl

[env:gd32f307_mbed]
board = gd32f307_mbed
framework = spl

; GD32F3x0 series

[env:gd32350c_start]
board = gd32350c_start
framework = spl

;[env:genericGD32F330C4]
;board = genericGD32F330C4
;framework = spl

[env:genericGD32F350CB]
board = genericGD32F350CB
framework = spl

[env:gd32350g_start]
board = gd32350g_start
framework = spl
; since the GD3250G start board has PA9 (USART0 TX) connected to USB +5V, 
; we need to use the USART0 on other pins (PB6 = TX, PB7 = RX).
;build_flags = -DUSE_ALTERNATE_USART0_PINS

; GD32F4xx series

[env:gd32407v_start]
board = gd32407v_start
framework = spl

[env:genericGD32F403VG]
board = genericGD32F403VG
framework = spl

[env:genericGD32F405IG]
board = genericGD32F405IG
framework = spl

[env:genericGD32F407ZE]
board = genericGD32F407ZE
framework = spl

[env:genericGD32F450VG]
board = genericGD32F450VG
framework = spl

; GD32L23x series

[env:gd32l233c_start]
board = gd32l233c_start
framework = spl

; GD32W51x series

[env:gd32w515p_eval]
board = gd32w515p_eval
framework = spl
